from openfisca_core.model_api import DAY, Variable
# Import the Entities specifically defined for this tax and benefit system
from openfisca_pf.entities import Personne

# ######################
# PRODUITS
# ######################


# Ventes de marchandises
class is_resultat_exploitation_ventes_marchandises_pf(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Ventes de marchandises, Polynésie Française (FA)"


class is_resultat_exploitation_ventes_marchandises_exportations(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Ventes de marchandises, Exportations (FB)"


class is_resultat_exploitation_ventes_marchandises_total(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Ventes de marchandises, Total (FC)"

    def formula(person, period):
        pf = person('is_resultat_exploitation_ventes_marchandises_pf', period)
        export = person('is_resultat_exploitation_ventes_marchandises_exportations', period)
        return pf + export


# Production vendue biens
class is_resultat_exploitation_production_vendue_biens_pf(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production vendue biens, Polynésie Française (FD)"


class is_resultat_exploitation_production_vendue_biens_exportations(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production vendue biens, Exportations (FE)"


class is_resultat_exploitation_production_vendue_biens_total(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production vendue biens, Total (FF)"

    def formula(person, period):
        pf = person('is_resultat_exploitation_production_vendue_biens_pf', period)
        export = person('is_resultat_exploitation_production_vendue_biens_exportations', period)
        return pf + export


# Production vendue services
class is_resultat_exploitation_production_vendue_services_pf(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production vendue services, Polynésie Française (FG)"


class is_resultat_exploitation_production_vendue_services_exportations(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production vendue services, Exportations (FH)"


class is_resultat_exploitation_production_vendue_services_total(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production vendue services, Total (FI)"

    def formula(person, period):
        pf = person('is_resultat_exploitation_production_vendue_services_pf', period)
        export = person('is_resultat_exploitation_production_vendue_services_exportations', period)
        return pf + export


# Chiffre d'affaires nets
class is_resultat_exploitation_chiffre_affaires_net_pf(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Chiffre d'affaires nets, Polynésie Française (FJ)"

    def formula(person, period):
        marchanfises = person('is_resultat_exploitation_ventes_marchandises_pf', period)
        biens = person('is_resultat_exploitation_production_vendue_biens_pf', period)
        services = person('is_resultat_exploitation_production_vendue_services_pf', period)
        return marchanfises + biens + services


class is_resultat_exploitation_chiffre_affaires_net_exportations(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Chiffre d'affaires nets, Exportations (FK)"

    def formula(person, period):
        marchanfises = person('is_resultat_exploitation_ventes_marchandises_exportations', period)
        biens = person('is_resultat_exploitation_production_vendue_biens_exportations', period)
        services = person('is_resultat_exploitation_production_vendue_services_exportations', period)
        return marchanfises + biens + services


class is_resultat_exploitation_chiffre_affaires_net_total(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY

    label = "Chiffre d'affaires nets, Total (FL)"

    def formula(person, period):
        marchanfises = person('is_resultat_exploitation_ventes_marchandises_total', period)
        biens = person('is_resultat_exploitation_production_vendue_biens_total', period)
        services = person('is_resultat_exploitation_production_vendue_services_total', period)
        return marchanfises + biens + services


# Autres
class is_resultat_exploitation_production_stockee(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = ("Production stockée (FM)")


class is_resultat_exploitation_production_immobilisee(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Production immobilisée (FN)"


class is_resultat_exploitation_subvention_exploitation(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Subvention d'exploitation (FO)"


class is_resultat_exploitation_resprises_amortissements_provisions_transfert_charges(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Reprises sur amortissements et provisions, transfert de charges (FP)"


class is_resultat_exploitation_autres_produits(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Autres produits  (FQ)"


# Total
class is_resultat_exploitation_total_produits(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Total des produits d'exploitation (FR)"

    def formula(person, period):
        ca = person('is_resultat_exploitation_chiffre_affaires_net_total', period)
        stockee = person('is_resultat_exploitation_production_stockee', period)
        immobilisee = person('is_resultat_exploitation_production_immobilisee', period)
        subvention = person('is_resultat_exploitation_subvention_exploitation', period)
        resprises = person('is_resultat_exploitation_resprises_amortissements_provisions_transfert_charges', period)
        autres = person('is_resultat_exploitation_autres_produits', period)
        return ca + stockee + immobilisee + subvention + resprises + autres


# ######################
# CHARGES
# ######################

# Ventes de marchandises
class is_resultat_exploitation_achats_marchandises(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Achats de marchandises (FS)"


class is_resultat_exploitation_variation_stock_marchandises(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Variation de stock marchandises (FT)"


class is_resultat_exploitation_achats_matieres_premieres_autres_approvisionnements(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Achats de matières premières et autres approvisionnements (FU)"


class is_resultat_exploitation_variation_stock_matieres_premieres_autres_approvisionnements(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Variation de stock matières premières et approvisionnements (FV)"


class is_resultat_exploitation_autres_achats_charges_externes(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Autres achats et charges externes (FW)"


class is_resultat_exploitation_impots_taxes_assimiles(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Impôts, taxes, versements assimilés (FX)"


class is_resultat_exploitation_salaires_traitements(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Salaires et traitements (FY)"


class is_resultat_exploitation_charges_sociales(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Charges sociales (FZ)"


class is_resultat_exploitation_dotations_exploitation_immobilisations_amortissements(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Dotations d'exploitation sur immobilisations, dotations aux amortissements (GA)"


class is_resultat_exploitation_dotations_exploitation_immobilisations_provisions(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Dotations d'exploitation sur immobilisations, dotations aux provisions (GB)"


class is_resultat_exploitation_dotations_exploitation_actif_circulant_provisions(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Dotations d'exploitation sur actif circulant, dotations aux provisions (GC)"


class is_resultat_exploitation_dotations_exploitation_risques_charges_provisions(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Dotations d'exploitation pour risques et charges, dotations aux provisions (GD)"


class is_resultat_exploitation_autres_charges(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Autres charges (GE)"


class is_resultat_exploitation_total_charges(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Total des charges d'exploitation (GF)"

    def formula(person, period):
        achat_marchandise = person('is_resultat_exploitation_achats_marchandises', period)
        stock_marchandise = person('is_resultat_exploitation_variation_stock_marchandises', period)
        achat_appro = person('is_resultat_exploitation_achats_matieres_premieres_autres_approvisionnements', period)
        stock_appro = person('is_resultat_exploitation_variation_stock_matieres_premieres_autres_approvisionnements', period)
        externe = person('is_resultat_exploitation_autres_achats_charges_externes', period)
        impots = person('is_resultat_exploitation_impots_taxes_assimiles', period)
        salaires = person('is_resultat_exploitation_salaires_traitements', period)
        sociales = person('is_resultat_exploitation_charges_sociales', period)
        immo_amortissement = person('is_resultat_exploitation_dotations_exploitation_immobilisations_amortissements', period)
        immo_provision = person('is_resultat_exploitation_dotations_exploitation_immobilisations_provisions', period)
        circulant = person('is_resultat_exploitation_dotations_exploitation_actif_circulant_provisions', period)
        risque = person('is_resultat_exploitation_dotations_exploitation_risques_charges_provisions', period)
        autres = person('is_resultat_exploitation_autres_charges', period)
        return achat_marchandise + stock_marchandise + achat_appro + stock_appro + externe + impots + salaires + sociales + immo_amortissement + immo_provision + circulant + risque + autres


# ######################
# RESULTATS
# ######################

class is_resultat_exploitation(Variable):
    value_type = int
    entity = Personne
    definition_period = DAY
    label = "Résultat d'exploitation (GG)"

    def formula(person, period):
        produits = person('is_resultat_exploitation_total_produits', period)
        charges = person('is_resultat_exploitation_total_charges', period)
        return produits - charges
